{
    "swagger": "2.0",
    "info": {
        "description": "This is Ingenialist's API",
        "title": "Ingenialists API V1",
        "contact": {
            "name": "JonathanGzzBen",
            "url": "http://www.github.com/JonathanGzzBen",
            "email": "jonathangzzben@gmail.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://mit-license.org/"
        },
        "version": "0.1.0"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/auth/google-login": {
            "get": {
                "description": "Logins with Google Oauth2",
                "tags": [
                    "auth"
                ],
                "summary": "Login with Google",
                "operationId": "LoginGoogle",
                "responses": {
                    "302": {
                        "description": "Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all registered users.",
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "operationId": "GetAllUsers",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user.",
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "operationId": "CreateUser",
                "parameters": [
                    {
                        "description": "User",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateUserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get user with matching ID.",
                "tags": [
                    "users"
                ],
                "summary": "Get user",
                "operationId": "GetUser",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.APIError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CreateUserDTO": {
            "type": "object",
            "required": [
                "birthdate",
                "gender",
                "name",
                "role"
            ],
            "properties": {
                "birthdate": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "description": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "googleSub": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "profilePictureUrl": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "example": "User"
                },
                "shortDescription": {
                    "type": "string"
                }
            }
        },
        "models.APIError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "birthdate": {
                    "type": "string",
                    "example": "2006-01-02T15:04:05Z"
                },
                "description": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "googleSub": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "profilePictureUrl": {
                    "type": "string"
                },
                "role": {
                    "type": "string",
                    "example": "User"
                },
                "shortDescription": {
                    "type": "string"
                }
            }
        }
    }
}